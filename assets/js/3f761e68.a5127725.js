"use strict";(self.webpackChunkpcapplusplus_github_io=self.webpackChunkpcapplusplus_github_io||[]).push([[5723],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=l.createContext({}),u=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=u(e.components);return l.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=n,k=d["".concat(i,".").concat(m)]||d[m]||c[m]||r;return a?l.createElement(k,p(p({ref:t},s),{},{components:a})):l.createElement(k,p({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,p=new Array(r);p[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,p[1]=o;for(var u=2;u<r;u++)p[u]=a[u];return l.createElement.apply(null,p)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>p});var l=a(7294),n=a(6010);const r="tabItem_Ymn6";function p(e){let{children:t,hidden:a,className:p}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(r,p),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>N});var l=a(7462),n=a(7294),r=a(6010),p=a(2466),o=a(6550),i=a(1980),u=a(7392),s=a(12);function c(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:l,default:n}}=e;return{value:t,label:a,attributes:l,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const l=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(r),(0,n.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(l.location.search);t.set(r,e),l.replace({...l.location,search:t.toString()})}),[r,l])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:l}=e,r=d(e),[p,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=a.find((e=>e.default))??a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:r}))),[i,u]=k({queryString:a,groupId:l}),[c,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[l,r]=(0,s.Nk)(a);return[l,(0,n.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:l}),h=(()=>{const e=i??c;return m({value:e,tabValues:r})?e:null})();(0,n.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:p,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var h=a(2389);const g="tabList__CuJ",y="tabItem_LNqP";function P(e){let{className:t,block:a,selectedValue:o,selectValue:i,tabValues:u}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,p.o5)(),d=e=>{const t=e.currentTarget,a=s.indexOf(t),l=u[a].value;l!==o&&(c(t),i(l))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:p}=e;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>s.push(e),onKeyDown:m,onClick:d},p,{className:(0,r.Z)("tabs__item",y,p?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:l}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===l));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==l}))))}function b(e){const t=f(e);return n.createElement("div",{className:(0,r.Z)("tabs-container",g)},n.createElement(P,(0,l.Z)({},e,t)),n.createElement(v,(0,l.Z)({},e,t)))}function N(e){const t=(0,h.Z)();return n.createElement(b,(0,l.Z)({key:String(t)},e))}},982:(e,t,a)=>{a.d(t,{Z:()=>o});var l=a(7294),n=a(6010),r=a(9960);const p="DocsButton_Wv58";const o=function(e){let{text:t,link:a}=e;return l.createElement(r.Z,{className:(0,n.Z)("button button--lg",p),to:a},t)}},1054:(e,t,a)=>{a.d(t,{Z:()=>r});var l=a(7294),n=a(2232);const r=function(e){let{relativePath:t,children:a}=e;return l.createElement("a",{href:(0,n.E2)()+t},a)}},2232:(e,t,a)=>{a.d(t,{E2:()=>c,K7:()=>o,Wx:()=>s,hv:()=>r,kq:()=>p,rU:()=>d,s6:()=>i,u$:()=>u,vR:()=>m});var l=a(143);const n="https://github.com/seladb/PcapPlusPlus";function r(){return n}function p(){const e=(0,l.yW)(),t=(0,l.zu)();return"Next"===t.label?e.label:t.label}function o(e){return`${n}/releases/tag/${e}`}function i(){return o(p())}function u(){return`${n}/archive/${p()}.zip`}function s(){return`${n}/archive/${p()}.tar.gz`}function c(){const e=(0,l.zu)(),t="Next"===e.label?"master":e.label;return`${n}/tree/${t}`}function d(){return`${n}/archive/master.zip`}function m(){return`${n}/archive/master.tar.gz`}},6605:(e,t,a)=>{a.d(t,{Z:()=>o});var l=a(7294),n=a(143),r=a(982),p=a(2232);const o=function(){const e=(0,n.yW)(),t=(0,n.zu)(),a=["Next",e.label].includes(t.label)?`Latest version: ${e.label}`:`${t.label} Release`;return l.createElement(r.Z,{text:a,link:(0,p.s6)()})}},2168:(e,t,a)=>{a.d(t,{Z:()=>r});var l=a(7294),n=a(2232);const r=function(e){let{versionString:t}=e;return l.createElement("a",{href:(0,n.s6)()},t||`${(0,n.kq)()} release`)}},1007:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>x,contentTitle:()=>w,default:()=>I,frontMatter:()=>N,metadata:()=>S,toc:()=>T});var l=a(7462),n=(a(7294),a(3905)),r=a(6605),p=a(4866),o=a(5162),i=a(2168);const u={toc:[{value:"Step 1 - install PcapPlusPlus",id:"step-1---install-pcapplusplus",level:3},{value:"Step 2 - create your first app",id:"step-2---create-your-first-app",level:3},{value:"Step 3 - create a Makefile",id:"step-3---create-a-makefile",level:3},{value:"Step 4 - build and run your app",id:"step-4---build-and-run-your-app",level:3}]};function s(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"step-1---install-pcapplusplus"},"Step 1 - install PcapPlusPlus"),(0,n.kt)("p",null,"Before installing PcapPlusPlus make sure you have the prerequisites installed for ",(0,n.kt)("a",{parentName:"p",href:"./install/linux#prerequisites"},"Linux"),"."),(0,n.kt)("p",null,"Pre-compiled packages are available for recent versions of Ubuntu, Fedora and CentOS. You can find them under the ",(0,n.kt)(i.Z,{mdxType:"ReleaseLink"}),". After downloading and extracting the archive file go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/")," and run the installation script:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"./install.sh\n")),(0,n.kt)("p",null,"Another option is using ",(0,n.kt)("a",{parentName:"p",href:"https://docs.brew.sh/Homebrew-on-Linux"},"Homebrew on Linux")," if you have it installed on your system:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"brew install pcapplusplus\n")),(0,n.kt)("p",null,"If you have another Linux distribution or GCC version you'll need to ",(0,n.kt)("a",{parentName:"p",href:"./install/linux"},"build PcapPlusPlus from source"),". Make sure not to skip the ",(0,n.kt)("a",{parentName:"p",href:"./install/linux#installation"},"installation")," part."),(0,n.kt)("h3",{id:"step-2---create-your-first-app"},"Step 2 - create your first app"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/example-app"),"."),(0,n.kt)("p",null,"If you built it from source go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/pcapplusplus/source/Tutorials/Tutorial-HelloWorld"),"."),(0,n.kt)("p",null,"Make sure you see the following files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," |-- main.cpp\n |-- 1_packet.pcap\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"main.cpp")," is the example application we'll use."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"1_packet.pcap")," is a pcap file the app reads from."),(0,n.kt)("h3",{id:"step-3---create-a-makefile"},"Step 3 - create a Makefile"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package you can find a Makefile in ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/example-app"),". This Makefile is already configured."),(0,n.kt)("p",null,"If you built it from source:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"go to ",(0,n.kt)("inlineCode",{parentName:"li"},"/path/to/pcapplusplus/source/Tutorials/Tutorial-HelloWorld")),(0,n.kt)("li",{parentName:"ul"},"rename ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile.non_windows")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile"))),(0,n.kt)("h3",{id:"step-4---build-and-run-your-app"},"Step 4 - build and run your app"),(0,n.kt)("p",null,"Run ",(0,n.kt)("inlineCode",{parentName:"p"},"make")," to build the app:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ make\n")),(0,n.kt)("p",null,"An executable file will be created which contains the compiled app. You can now run it and should be able to see the following output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"Source IP is '10.0.0.138'; Dest IP is '10.0.0.1'\n")))}s.isMDXComponent=!0;var c=a(1054);const d={toc:[{value:"Step 1 - install PcapPlusPlus",id:"step-1---install-pcapplusplus",level:3},{value:"Step 2 - create your first app",id:"step-2---create-your-first-app",level:3},{value:"Step 3 - create a Makefile",id:"step-3---create-a-makefile",level:3},{value:"Step 4 - build and run your app",id:"step-4---build-and-run-your-app",level:3}]};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"step-1---install-pcapplusplus"},"Step 1 - install PcapPlusPlus"),(0,n.kt)("p",null,"Before installing PcapPlusPlus make sure you have the prerequisites installed for ",(0,n.kt)("a",{parentName:"p",href:"./install/macos#prerequisites"},"MacOS"),"."),(0,n.kt)("p",null,"The easiest way to get PcapPlusPlus is from Homebrew:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"brew install pcapplusplus\n")),(0,n.kt)("p",null,"If you prefer not to use Homebrew you can also found pre-compiled packages for various versions of MacOS and Xcode in the ",(0,n.kt)(i.Z,{mdxType:"ReleaseLink"}),". After downloading and extracting the archive file go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/")," and run the installation script:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"./install.sh\n")),(0,n.kt)("p",null,"Another option is to build PcapPlusPlus ",(0,n.kt)("a",{parentName:"p",href:"./install/macos"},"from source"),". Make sure not to skip the ",(0,n.kt)("a",{parentName:"p",href:"./install/macos#installation"},"installation")," part."),(0,n.kt)("h3",{id:"step-2---create-your-first-app"},"Step 2 - create your first app"),(0,n.kt)("p",null,"If you installed PcapPlusPlus using Homebrew go to the ",(0,n.kt)(c.Z,{relativePath:"/Examples/Tutorials/Tutorial-HelloWorld",mdxType:"CodeLink"},"Hello World tutorial on GitHub")," and get the files in that directory."),(0,n.kt)("p",null,"If you downloaded a pre-compiled package go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/example-app"),"."),(0,n.kt)("p",null,"If you built it from source go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/pcapplusplus/source/Tutorials/Tutorial-HelloWorld"),"."),(0,n.kt)("p",null,"Make sure you see the following files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," |-- main.cpp\n |-- 1_packet.pcap\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"main.cpp")," is the example application we'll use."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"1_packet.pcap")," is a pcap file the app reads from."),(0,n.kt)("h3",{id:"step-3---create-a-makefile"},"Step 3 - create a Makefile"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package you can find a Makefile in ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/example-app"),". This Makefile is already configured."),(0,n.kt)("p",null,"If you built it from source or downloaded it from GitHub:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"go to the directory of the tutorial ",(0,n.kt)("inlineCode",{parentName:"li"},"/path/to/pcapplusplus/source/Tutorials/Tutorial-HelloWorld")),(0,n.kt)("li",{parentName:"ul"},"rename ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile.non_windows")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile"))),(0,n.kt)("h3",{id:"step-4---build-and-run-your-app"},"Step 4 - build and run your app"),(0,n.kt)("p",null,"Run ",(0,n.kt)("inlineCode",{parentName:"p"},"make")," to build the app:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ make\n")),(0,n.kt)("p",null,"An executable file will be created which contains the compiled app. You can now run it and should be able to see the following output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"Source IP is '10.0.0.138'; Dest IP is '10.0.0.1'\n")))}m.isMDXComponent=!0;const k={toc:[{value:"Step 1 - install PcapPlusPlus",id:"step-1---install-pcapplusplus",level:3},{value:"Step 2 - create your first app",id:"step-2---create-your-first-app",level:3},{value:"Step 3 - create a Makefile",id:"step-3---create-a-makefile",level:3},{value:"Step 4 - build and run your app",id:"step-4---build-and-run-your-app",level:3}]};function f(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"step-1---install-pcapplusplus"},"Step 1 - install PcapPlusPlus"),(0,n.kt)("p",null,"Before installing PcapPlusPlus make sure you have the prerequisites installed for ",(0,n.kt)("a",{parentName:"p",href:"./install/mingw#prerequisites-for-building-with-mingw"},"MinGW32")," or ",(0,n.kt)("a",{parentName:"p",href:"./install/mingw#prerequisites-for-building-with-mingw-w64"},"MinGW-w64"),"."),(0,n.kt)("p",null,"If you have MinGW with GCC version 5.3.0 or MinGW-w64 with GCC version 6.3.0 you can download a pre-compiled package from the ",(0,n.kt)(i.Z,{mdxType:"ReleaseLink"}),"."),(0,n.kt)("p",null,"Otherwise you need to ",(0,n.kt)("a",{parentName:"p",href:"./install/mingw"},"build PcapPlusPlus from source"),"."),(0,n.kt)("h3",{id:"step-2---create-your-first-app"},"Step 2 - create your first app"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"Drive:\\path\\to\\your\\package\\example-app"),"."),(0,n.kt)("p",null,"If you built it from source go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"Drive:\\path\\to\\pcapplusplus\\source\\Tutorials\\Tutorial-HelloWorld"),"."),(0,n.kt)("p",null,"Make sure you see the following files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," |-- main.cpp\n |-- 1_packet.pcap\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"main.cpp")," is the example application we'll use."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"1_packet.pcap")," is a pcap file the app reads from."),(0,n.kt)("h3",{id:"step-3---create-a-makefile"},"Step 3 - create a Makefile"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package you can find a Makefile in ",(0,n.kt)("inlineCode",{parentName:"p"},"Drive:\\path\\to\\your\\package\\example-app"),". This Makefile is already configured."),(0,n.kt)("p",null,"If you built it from source:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"go to ",(0,n.kt)("inlineCode",{parentName:"li"},"Drive:\\path\\to\\pcapplusplus\\source\\Tutorials\\Tutorial-HelloWorld")),(0,n.kt)("li",{parentName:"ul"},"rename ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile.windows")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile"))),(0,n.kt)("h3",{id:"step-4---build-and-run-your-app"},"Step 4 - build and run your app"),(0,n.kt)("p",null,"Run ",(0,n.kt)("inlineCode",{parentName:"p"},"make")," to build the app:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"C:\\path\\to\\example\\app>mingw32-make.exe\n")),(0,n.kt)("p",null,"An ",(0,n.kt)("inlineCode",{parentName:"p"},".exe")," file will be created which contains the compiled app. You can now run it and should be able to see the following output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"Source IP is '10.0.0.138'; Dest IP is '10.0.0.1'\n")))}f.isMDXComponent=!0;const h={toc:[{value:"Step 1 - install PcapPlusPlus",id:"step-1---install-pcapplusplus",level:3},{value:"Step 2 - create your first app",id:"step-2---create-your-first-app",level:3},{value:"Step 3 - configure your solution",id:"step-3---configure-your-solution",level:3},{value:"Step 4 - build and run your app",id:"step-4---build-and-run-your-app",level:3}]};function g(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"step-1---install-pcapplusplus"},"Step 1 - install PcapPlusPlus"),(0,n.kt)("p",null,"Before installing PcapPlusPlus make sure you have the prerequisites installed for ",(0,n.kt)("a",{parentName:"p",href:"./install/vs#prerequisites"},"Visual Studio"),". Please notice that the currently supported versions of Visual Studio are 2015, 2017 and 2019."),(0,n.kt)("p",null,"Download the pre-compiled package for the Visual Studio version you have (VS2015, VS2017 or VS2019) from the ",(0,n.kt)(i.Z,{mdxType:"ReleaseLink"}),"."),(0,n.kt)("h3",{id:"step-2---create-your-first-app"},"Step 2 - create your first app"),(0,n.kt)("p",null,"Go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"Drive:\\path\\to\\your\\package\\ExampleProject"),"."),(0,n.kt)("p",null,"You can find the following files there:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," |-- main.cpp\n |-- 1_packet.pcap\n |-- ExampleProject.sln\n |-- ExampleProject.vcxproj\n |-- ExampleProject.vcxproj.filters\n |-- PcapPlusPlusPropertySheet.props\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"main.cpp")," is the example application we'll use."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"1_packet.pcap")," is a pcap file the app reads from."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject.sln"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject.vcxproj"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject.vcxproj.filters")," are the Visual Studio solution/project files."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"PcapPlusPlusPropertySheet.props")," is the PcapPlusPlus properties file."),(0,n.kt)("h3",{id:"step-3---configure-your-solution"},"Step 3 - configure your solution"),(0,n.kt)("p",null,"Edit the ",(0,n.kt)("inlineCode",{parentName:"p"},"PcapPlusPlusPropertySheet.props")," file in the following way:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set the value of the ",(0,n.kt)("inlineCode",{parentName:"li"},"PcapPlusPlusHome")," XML node to the folder where PcapPlusPlus binaries package is located (the one you downloaded)"),(0,n.kt)("li",{parentName:"ul"},"Set the value of the ",(0,n.kt)("inlineCode",{parentName:"li"},"PcapSdkHome")," XML node to the folder where WinPcap Developer's Pack / Npcap SDK is located"),(0,n.kt)("li",{parentName:"ul"},"Set the value of the ",(0,n.kt)("inlineCode",{parentName:"li"},"PThreadWin32Home")," node to the folder where pthread-win32 is located")),(0,n.kt)("h3",{id:"step-4---build-and-run-your-app"},"Step 4 - build and run your app"),(0,n.kt)("p",null,"You can now open ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject.sln")," in Visual Studio and build it in the various available configurations (x86/x64 and debug/release)."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},".exe")," file will be created under ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject\\Debug\\x86")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject\\Debug\\x64")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject\\Release\\x86")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"ExampleProject\\Release\\x64")," (according to the chosen configuration). You can now run it and should be able to see the following output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"Source IP is '10.0.0.138'; Dest IP is '10.0.0.1'\n")))}g.isMDXComponent=!0;const y={toc:[{value:"ToyVpn",id:"toyvpn",level:3},{value:"ToyVpn-PcapPlusPlus",id:"toyvpn-pcapplusplus",level:3},{value:"Do I need a rooted device in order to use PcapPlusPlus in my Android app?",id:"do-i-need-a-rooted-device-in-order-to-use-pcapplusplus-in-my-android-app",level:3},{value:"Using PcapPlusPlus in my app",id:"using-pcapplusplus-in-my-app",level:3}]};function P(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"toyvpn"},"ToyVpn"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://android.googlesource.com/platform/development/+/master/samples/ToyVpn"},"ToyVpn")," is an Android example app provided by Google that demonstrates Android APIs to create VPN solutions. You can read more about it in the ",(0,n.kt)("a",{parentName:"p",href:"https://developer.android.com/guide/topics/connectivity/vpn"},"Android documentation"),"."),(0,n.kt)("p",null,"ToyVpn uses ",(0,n.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/net/VpnService"},(0,n.kt)("inlineCode",{parentName:"a"},"VpnService"))," to handle incoming and outgoing network traffic, which means is has access to the network packets going through the VPN (which is otherwise not possible on non-rooted devices). This makes it a great example of how PcapPlusPlus can be used in Android apps and run on any device without special requirements such as a rooted device."),(0,n.kt)("h3",{id:"toyvpn-pcapplusplus"},"ToyVpn-PcapPlusPlus"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seladb/ToyVpn-PcapPlusPlus"},"ToyVpn-PcapPlusPlus")," is a version of ToyVpn that uses PcapPlusplus to gather data and metrics on the network traffic that goes through the VPN. It collects data such as packet count of different protocols (IPv4, IPv6, DNS, TLS, etc.), TCP connections, DNS requests and responses, TLS versions, TLS Server Name Indication (SNI), and more. These metrics are collected and written to the app's log. In addition to data collection, all of the network traffic is captured and saved to a pcap file that can be used for further investigation."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seladb/ToyVpn-PcapPlusPlus/blob/master/README.md"},"ToyVpn-PcapPlusPlus's ",(0,n.kt)("inlineCode",{parentName:"a"},"README.md"))," file contains detailed information on how to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/seladb/ToyVpn-PcapPlusPlus#build-and-run-instructions"},"build and install the app"),"."),(0,n.kt)("p",null,"PcapPlusPlus pre-compiled libraries are available in the release page: ",(0,n.kt)(i.Z,{mdxType:"ReleaseLink"}),"."),(0,n.kt)("p",null,"Here is a screenshot of the app:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"ToyVpn Screenshot",src:a(9245).Z,width:"404",height:"869"})),(0,n.kt)("p",null,"And here is an example of the metrics collected by the app (as written to the app's log):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: Packet stats:\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: Packets=2639\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: IPv4=2620\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: IPv6=11\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: TCP=2583\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: UDP=37\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: Connections=48\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: DNS_req=18\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: DNS_res=19\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: Top_TLS_Version=[(TLS 1.3, 27)]\n03-19 00:57:33.076  6085  6130 I PcapPlusPlusInterface: TOP_SNI=[(i.ytimg.com, 4), (cdn.ampproject.org, 4), (lh5.googleusercontent.com, 2), (google.com, 2), (googleads.g.doubleclick.net, 2)]\n")),(0,n.kt)("h3",{id:"do-i-need-a-rooted-device-in-order-to-use-pcapplusplus-in-my-android-app"},"Do I need a rooted device in order to use PcapPlusPlus in my Android app?"),(0,n.kt)("p",null,"Not at all! Please follow ",(0,n.kt)("a",{parentName:"p",href:"./install/android/#do-i-need-a-rooted-device-in-order-to-use-pcapplusplus-in-my-android-app"},"this link")),(0,n.kt)("h3",{id:"using-pcapplusplus-in-my-app"},"Using PcapPlusPlus in my app"),(0,n.kt)("p",null,"Please follow ",(0,n.kt)("a",{parentName:"p",href:"./install/android#using-pcapplusplus-in-my-app"},"this link")))}P.isMDXComponent=!0;const v={toc:[{value:"Step 1 - install PcapPlusPlus",id:"step-1---install-pcapplusplus",level:3},{value:"Step 2 - create your first app",id:"step-2---create-your-first-app",level:3},{value:"Step 3 - create a Makefile",id:"step-3---create-a-makefile",level:3},{value:"Step 4 - build and run your app",id:"step-4---build-and-run-your-app",level:3}]};function b(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"step-1---install-pcapplusplus"},"Step 1 - install PcapPlusPlus"),(0,n.kt)("p",null,"Before installing PcapPlusPlus make sure you have the prerequisites installed for ",(0,n.kt)("a",{parentName:"p",href:"./install/freebsd#prerequisites"},"FreeBSD"),"."),(0,n.kt)("p",null,"Pre-compiled packages are available for recent versions of FreeBSD. You can find them under the ",(0,n.kt)(i.Z,{mdxType:"ReleaseLink"}),". After downloading and extracting the archive file go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/")," and run the installation script:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo ./install.sh\n")),(0,n.kt)("p",null,"If you have other versions of FreeBSD you'll need to ",(0,n.kt)("a",{parentName:"p",href:"./install/freebsd"},"build PcapPlusPlus from source"),". Make sure not to skip the ",(0,n.kt)("a",{parentName:"p",href:"./install/freebsd#installation"},"installation")," part."),(0,n.kt)("h3",{id:"step-2---create-your-first-app"},"Step 2 - create your first app"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/example-app"),"."),(0,n.kt)("p",null,"If you built it from source go to: ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/pcapplusplus/source/Tutorials/Tutorial-HelloWorld"),"."),(0,n.kt)("p",null,"Make sure you see the following files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," |-- main.cpp\n |-- 1_packet.pcap\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"main.cpp")," is the example application we'll use."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"1_packet.pcap")," is a pcap file the app reads from."),(0,n.kt)("h3",{id:"step-3---create-a-makefile"},"Step 3 - create a Makefile"),(0,n.kt)("p",null,"If you downloaded a pre-compiled package you can find a Makefile in ",(0,n.kt)("inlineCode",{parentName:"p"},"/path/to/your/package/example-app"),". This Makefile is already configured."),(0,n.kt)("p",null,"If you built it from source:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"go to ",(0,n.kt)("inlineCode",{parentName:"li"},"/path/to/pcapplusplus/source/Tutorials/Tutorial-HelloWorld")),(0,n.kt)("li",{parentName:"ul"},"rename ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile.non_windows")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"Makefile"))),(0,n.kt)("h3",{id:"step-4---build-and-run-your-app"},"Step 4 - build and run your app"),(0,n.kt)("p",null,"Run ",(0,n.kt)("inlineCode",{parentName:"p"},"gmake")," to build the app:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ gmake\n")),(0,n.kt)("p",null,"An executable file will be created which contains the compiled app. You can now run it and should be able to see the following output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"Source IP is '10.0.0.138'; Dest IP is '10.0.0.1'\n")))}b.isMDXComponent=!0;const N={title:"Getting Started",sidebar_position:1,hide_table_of_contents:!0},w=void 0,S={unversionedId:"quickstart",id:"version-v22.05/quickstart",title:"Getting Started",description:"PcapPlusPlus is a multi-platform C++ library for capturing, parsing and crafting of network packets. It is designed to be efficient, powerful and easy to use.",source:"@site/versioned_docs/version-v22.05/quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/docs/v22.05/quickstart",draft:!1,editUrl:"https://github.com/PcapPlusPlus/pcapplusplus.github.io/edit/master/versioned_docs/version-v22.05/quickstart.mdx",tags:[],version:"v22.05",sidebarPosition:1,frontMatter:{title:"Getting Started",sidebar_position:1,hide_table_of_contents:!0},sidebar:"docs",next:{title:"Setting Up PcapPlusPlus",permalink:"/docs/v22.05/install"}},x={},T=[{value:"Quick Start",id:"quick-start",level:2}],C={toc:T};function I(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},C,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"PcapPlusPlus")," is a multi-platform C++ library for capturing, parsing and crafting of network packets. It is designed to be efficient, powerful and easy to use."),(0,n.kt)("p",null,"PcapPlusPlus enables decoding and forging capabilities for a large variety of network protocols. It also provides easy to use C++ wrappers for the most popular packet processing engines such as ",(0,n.kt)("a",{parentName:"p",href:"https://www.tcpdump.org/"},"libpcap"),", ",(0,n.kt)("a",{parentName:"p",href:"https://www.winpcap.org/"},"WinPcap"),", ",(0,n.kt)("a",{parentName:"p",href:"https://nmap.org/npcap/"},"Npcap")," (WinPcap's successor), ",(0,n.kt)("a",{parentName:"p",href:"https://www.dpdk.org/"},"DPDK")," and ",(0,n.kt)("a",{parentName:"p",href:"https://www.ntop.org/products/packet-capture/pf_ring/"},"PF_RING"),"."),(0,n.kt)(r.Z,{mdxType:"ReleaseButtonLink"}),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"quick-start"},"Quick Start"),(0,n.kt)("p",null,"This guide will help you install and build your first PcapPlusPlus application. You can find more information in the ",(0,n.kt)("a",{parentName:"p",href:"./tutorials/intro"},"Tutorials")," and in the ",(0,n.kt)("a",{parentName:"p",href:"./install"},"installation guide"),"."),(0,n.kt)("p",null,"Please choose your platform:"),(0,n.kt)(p.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"Linux",mdxType:"TabItem"},(0,n.kt)(s,{mdxType:"Linux"})),(0,n.kt)(o.Z,{value:"MacOS",mdxType:"TabItem"},(0,n.kt)(m,{mdxType:"MacOS"})),(0,n.kt)(o.Z,{value:"Windows - MinGW",mdxType:"TabItem"},(0,n.kt)(f,{mdxType:"MinGW"})),(0,n.kt)(o.Z,{value:"Windows - Visual Studio",mdxType:"TabItem"},(0,n.kt)(g,{mdxType:"VS"})),(0,n.kt)(o.Z,{value:"Android",mdxType:"TabItem"},(0,n.kt)(P,{mdxType:"Android"})),(0,n.kt)(o.Z,{value:"FreeBSD",mdxType:"TabItem"},(0,n.kt)(b,{mdxType:"FreeBSD"}))))}I.isMDXComponent=!0},9245:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/toyvpn-e6523f4d622a56feb1d24507c9613ec4.png"}}]);